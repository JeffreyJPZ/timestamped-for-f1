services:
  
  cache:
    image: ghcr.io/jeffreyjpz/timestamped-for-f1/cache:latest
    build:
      context: ./services/cache
      dockerfile: Dockerfile
    restart: unless-stopped
    expose:
      - "6379"
    volumes:
      - ./services/cache/config/redis.conf:/usr/local/etc/redis/redis.conf
      - ./services/cache/data:/data

  cache-api:
    image: ghcr.io/jeffreyjpz/timestamped-for-f1/cache-api:latest
    build:
      context: ./services/cache-api
      dockerfile: Dockerfile
    restart: unless-stopped
    expose:
      - "6666"
    depends_on:
      - cache
    environment:
      TIMESTAMPED_FOR_F1_CACHE_HOST: "${TIMESTAMPED_FOR_F1_CACHE_HOST}"
      TIMESTAMPED_FOR_F1_CACHE_PORT: "${TIMESTAMPED_FOR_F1_CACHE_PORT}"
      TIMESTAMPED_FOR_F1_CACHE_USERNAME: "${TIMESTAMPED_FOR_F1_CACHE_USERNAME}"
      TIMESTAMPED_FOR_F1_CACHE_PASSWORD: "${TIMESTAMPED_FOR_F1_CACHE_PASSWORD}"
      TIMESTAMPED_FOR_F1_CACHE_DB: "${TIMESTAMPED_FOR_F1_CACHE_DB}"
      TIMESTAMPED_FOR_F1_CACHE_API_IP: "${TIMESTAMPED_FOR_F1_CACHE_API_IP}"
      TIMESTAMPED_FOR_F1_CACHE_API_PORT: "${TIMESTAMPED_FOR_F1_CACHE_API_PORT}"

  openf1-api:
    image: ghcr.io/jeffreyjpz/timestamped-for-f1/openf1-api:latest
    build:
      context: ./services/openf1
      dockerfile: Dockerfile
    expose:
      - "8000"
    depends_on:
      - openf1-db
    environment:
      MONGO_CONNECTION_STRING: "mongodb://${TIMESTAMPED_FOR_F1_OPENF1_DB_ROOT_USERNAME}:${TIMESTAMPED_FOR_F1_OPENF1_DB_ROOT_PASSWORD}@openf1-db:${TIMESTAMPED_FOR_F1_OPENF1_DB_PORT}"
      OPENF1_DB_NAME: "${TIMESTAMPED_FOR_F1_OPENF1_DB_NAME}"
    command: ["uvicorn", "openf1.services.query_api.app:app", "--host 0.0.0.0", "--port 8000"]

  openf1-db:
    image: ghcr.io/jeffreyjpz/timestamped-for-f1/openf1-db:latest
    build:
      context: ./services/openf1-db
      dockerfile: Dockerfile
    restart: unless-stopped
    expose:
      - "27017"
    volumes:
      - ./services/openf1-db/data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${TIMESTAMPED_FOR_F1_OPENF1_DB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${TIMESTAMPED_FOR_F1_OPENF1_DB_ROOT_PASSWORD}"

  openf1-historical-processing:
    image: ghcr.io/jeffreyjpz/timestamped-for-f1/openf1-historical-processing:latest
    build:
      context: ./services/openf1
      dockerfile: Dockerfile
    depends_on:
      - openf1-db
    environment:
      MONGO_CONNECTION_STRING: "mongodb://${TIMESTAMPED_FOR_F1_OPENF1_DB_ROOT_USERNAME}:${TIMESTAMPED_FOR_F1_OPENF1_DB_ROOT_PASSWORD}@openf1-db:${TIMESTAMPED_FOR_F1_OPENF1_DB_PORT}"
      OPENF1_DB_NAME: "${TIMESTAMPED_FOR_F1_OPENF1_DB_NAME}"
    command: ["tail", "-f", "/dev/null"]

  # openf1-live-mq:
  #   image: ghcr.io/jeffreyjpz/timestamped-for-f1/openf1-live-mq:latest
  #   build:
  #     context: ./services/openf1-live-mq
  #     dockerfile: Dockerfile
  #   restart: unless-stopped
  #   expose:
  #     - "5672"
  #     - "15672"
  #   volumes:
  #     - ./services/openf1-live-mq/config/definitions.json:/etc/rabbitmq/definitions.json

  # historical-api:
  #   image: ghcr.io/jeffreyjpz/timestamped-for-f1/historical-api:latest
  #   build:
  #     context: ./historical/api
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8888:8888"
  #   depends_on:
  #     - historical-db
  #   environment:
  #     SQLALCHEMY_URL: "postgresql://${TIMESTAMPED_FOR_F1_HISTORICAL_DB_ROOT_USERNAME}:${TIMESTAMPED_FOR_F1_HISTORICAL_DB_ROOT_PASSWORD}@historical-db:${TIMESTAMPED_FOR_F1_HISTORICAL_DB_PORT}/${TIMESTAMPED_FOR_F1_HISTORICAL_DB_NAME}"

  # historical-db:
  #   image: postgres:17.5
  #   restart: unless-stopped
  #   expose:
  #     - "5432"
  #   volumes:
  #     - ./services/historical-db/data:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_USER: "${TIMESTAMPED_FOR_F1_HISTORICAL_DB_ROOT_USERNAME}"
  #     POSTGRES_PASSWORD: "${TIMESTAMPED_FOR_F1_HISTORICAL_DB_ROOT_PASSWORD}"
  #     POSTGRES_DB: "${TIMESTAMPED_FOR_F1_HISTORICAL_DB_NAME}"

  # historical-processing:
  #   image: ghcr.io/jeffreyjpz/timestamped-for-f1/historical-processing:latest
  #   build:
  #     context: ./services/historical/processing
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - openf1
  #     - openf1-db
  #     - historical-db
  #   environment:
  #     OPENF1_ADDRESS: "openf1:8000"
  #     SQLALCHEMY_URL: "postgresql://${TIMESTAMPED_FOR_F1_HISTORICAL_DB_ROOT_USERNAME}:${TIMESTAMPED_FOR_F1_HISTORICAL_DB_ROOT_PASSWORD}@historical-db:${TIMESTAMPED_FOR_F1_HISTORICAL_DB_PORT}/${TIMESTAMPED_FOR_F1_HISTORICAL_DB_NAME}"

  web-api:
    image: ghcr.io/jeffreyjpz/timestamped-for-f1/web-api:latest
    build:
      context: ./services/web-api
      dockerfile: Dockerfile
    restart: unless-stopped
    expose:
      - "8080"
    depends_on:
      - cache
      - cache-api
      - openf1-api
      - openf1-db

  web-server:
    image: ghcr.io/jeffreyjpz/timestamped-for-f1/web-server:latest
    build:
      context: ./services/web-server
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    depends_on:
      - cache
      - cache-api
      - openf1-api
      - openf1-db
      - web-api
    cap_add:
      - NET_ADMIN
    volumes:
      - ./services/web-server/data/data:/data
      - ./services/web-server/data/config:/config
