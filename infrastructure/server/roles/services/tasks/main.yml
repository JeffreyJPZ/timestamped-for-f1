# Installs configuration for services on a server and starts services
---

- name: Copy over docker compose file
  ansible.builtin.template:
    content: compose.yml.j2
    dest: "{{ server_dir_path }}/compose.yml"
    owner: "{{ server_user }}"
    group: "{{ server_user }}"
    mode: "0644"

- name: Copy over environment variables for services as system level variables
  become: true
  ansible.builtin.lineinfile:
    path: /etc/environment
    regexp: "^{{ item.key }}="
    line: "{{ item.key }}={{ item.value }}"
    create: yes
    state: present
  loop: "{{ timestamped_for_f1_env_vars | dict2items }}"

- name: Copy over web server config
  ansible.builtin.template:
    src: caddyfile.conf.j2
    dest: "{{ timestamped_for_f1_root_path }}/services/web-server/config/Caddyfile"
    owner: "{{ server_user }}"
    group: "{{ server_user }}"
    mode: "0644"

- name: Copy over cache config
  ansible.builtin.template:
    src: redis.conf.j2
    dest: "{{ timestamped_for_f1_root_path }}/services/cache/config/redis.conf"
    owner: "{{ server_user }}"
    group: "{{ server_user }}"
    mode: "0644"
  
- name: Configure docker daemon to start on boot
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true

- name: Schedule docker image updates
  ansible.builtin.cron:
    name: "Docker image updates"
    minute: "0"
    hour: "0"
    day: "*"
    job: "cd {{ timestamped_for_f1_root_path }} && docker compose pull && docker compose up web-server -d --force-recreate"

- name: Schedule docker cleanup job
  ansible.builtin.cron:
    name: "Docker cleanup"
    minute: "0"
    hour: "0"
    day: "*"
    job: "cd {{ timestamped_for_f1_root_path }} && docker system prune"
