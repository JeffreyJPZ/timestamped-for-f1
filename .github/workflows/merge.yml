name: merge

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  generate-image-tags:
    name: Generate tag names for Docker images
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.make-tag.outputs.tag }}
    steps:
      - name: Get current date as a timestamp
        id: get-timestamp
        run: echo "now=$(date "+%Y%m%dT%H%M%S")" >> $GITHUB_OUTPUT
      
      - name: Generate tag name
        id: make-tag
        run: echo "tag=${{ steps.get-timestamp.outputs.now }}" >> $GITHUB_OUTPUT

  build-and-push:
    name: Build and push service images to container registry
    needs: generate-image-tags
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        namespace: jeffreyjpz/timestamped-for-f1 # The namespace for all images
        parent-path: ./services # Relative path to parent directory containing all services
        service: [
          cache,
          cache-api,
          openf1-live-mq,
          openf1-api,
          openf1-db,
          openf1-historical-processing,
          web-api,
          web-server
        ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_WRITE_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build service images and push to GitHub Container Registry
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.parent-path }}/${{ matrix.service }}
          push: true
          tags: ghcr.io/${{ matrix.namespace }}/${{ matrix.service }}:latest

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: myimage
          path: ${{ runner.temp }}/myimage.tar
