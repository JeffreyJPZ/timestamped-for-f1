name: ci

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and test images
    environment: test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        namespace: [jeffreyjpz/timestamped-for-f1]  # The container registry namespace
        parent-path: [./services]                   # Relative path to parent directory containing all services
        service: [
          cache,
          cache-api,
          dashboard,
          openf1-live-mq,
          openf1-api,
          openf1-db,
          openf1-historical-processing,
          web-api,
          web-server
        ]
        exclude:
          # Dashboard is in a different directory
          - service: dashboard
            namespace: jeffreyjpz/timestamped-for-f1
            parent-path: ./services
        include:
          - service: dashboard
            namespace: jeffreyjpz/timestamped-for-f1
            parent-path: .
          # OpenF1 API and processing use the same OpenF1 image
          - service: openf1-api
            namespace: jeffreyjpz/timestamped-for-f1
            parent-path: ./services
            base-service: openf1
          - service: openf1-historical-processing
            namespace: jeffreyjpz/timestamped-for-f1
            parent-path: ./services
            base-service: openf1
          
    steps:
      - name: Checkout repository and update submodules
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get metadata from the event that triggered this workflow
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ matrix.namespace }}/${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest
          labels: |
            org.opencontainers.image.title=${{ matrix.service }}
            org.opencontainers.image.description=${{ matrix.service }}

      - name: Set required build args for the dashboard service, else set build args as an empty string
        id: build_args
        run: |
          if [ "${{ matrix.service }}" = "dashboard" ]; then
            echo "build_args<<EOF" >> $GITHUB_OUTPUT
            echo "TIMESTAMPED_FOR_F1_DASHBOARD_NODE_ENV=${{ vars.TIMESTAMPED_FOR_F1_DASHBOARD_NODE_ENV }}" >> $GITHUB_OUTPUT
            echo "TIMESTAMPED_FOR_F1_DASHBOARD_HOST=${{ vars.TIMESTAMPED_FOR_F1_DASHBOARD_HOST }}" >> $GITHUB_OUTPUT
            echo "TIMESTAMPED_FOR_F1_DASHBOARD_PORT=${{ vars.TIMESTAMPED_FOR_F1_DASHBOARD_PORT }}" >> $GITHUB_OUTPUT
            echo "TIMESTAMPED_FOR_F1_DASHBOARD_WEB_API_BASE_URL=${{ vars.TIMESTAMPED_FOR_F1_DASHBOARD_WEB_API_BASE_URL }}" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "build_args=" >> $GITHUB_OUTPUT
          fi

      - name: Build service image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.parent-path }}/${{ matrix.base-service != '' && matrix.base-service || matrix.service }}
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ steps.build_args.outputs.build_args }}
